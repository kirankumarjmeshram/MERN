  //file upload app.js
  import './App.css';
import { useState } from 'react';
import axios from 'axios';

const url = 'http://localhost:1234/img';

function App() {

const [postImage, setPostImage] = useState( { myFile : ""})

const createPost = async (newImage) => {
  try{
    await axios.post(url, newImage)
  }catch(error){
    console.log(error)
  }
}

const handleSubmit = (e) => {
  e.preventDefault();
  createPost(postImage)
  console.log("Uploaded")
}

const handleFileUpload = async (e) => {
  const file = e.target.files[0];
  const base64 = await convertToBase64(file);
  console.log(base64)
  setPostImage({ ...postImage, myFile : base64 })
}



  return (
    <div className="App">
      <form onSubmit={handleSubmit}>

        <label htmlFor="file-upload" className='custom-file-upload'>
          <img src={postImage.myFile} alt="" />
        </label>

        <input 
          type="file"
          lable="Image"
          name="myFile"
          id='file-upload'
          accept='.jpeg, .png, .jpg'
          onChange={(e) => handleFileUpload(e)}
         />
         <button type='submit'>Submit</button>
      </form>
    </div>
  );
}

export default App;


function convertToBase64(file){
  return new Promise((resolve, reject) => {
    const fileReader = new FileReader();
    fileReader.readAsDataURL(file);
    fileReader.onload = () => {
      resolve(fileReader.result)
    };
    fileReader.onerror = (error) => {
      reject(error)
    }
  })
}

//^ file upload app.js



//v2 app.js
import "./App.css";
import { useState, useRef } from "react";
import axios from "axios";

const url = "http://localhost:1234/img";

function App() {
  const [postImage, setPostImage] = useState({ myFile: "" });

  const createPost = async (newImage) => {
    try {
      await axios.post(url, newImage);
    } catch (error) {
      console.log(error);
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    createPost(postImage);
    console.log("Uploaded");
  };

  const handleFileUpload = async (e) => {
    const file = e.target.files[0];
    const base64 = await convertToBase64(file);
    console.log(base64);
    setPostImage({ ...postImage, myFile: base64 });
  };
  //drag and drop

  const [files, setFiles] = useState(null);
  const inputRef = useRef();

  const handleDragOver = (event) => {
    event.preventDefault();
  };

  const handleDrop = (event) => {
    event.preventDefault();
    setFiles(event.dataTransfer.files);
  };

  // send files to the server // learn from my other video
  //note: handleUpload = hahandleFileUpload

  // const handleUpload = () => {
  //   const formData = new FormData();
  //   formData.append("Files", files);
  //   console.log(formData.getAll())
  //   // fetch(
  //   //   "link", {
  //   //     method: "POST",
  //   //     body: formData
  //   //   }
  //   // )
  // };

  return (
    <div className="App">
      <div className="dropzone" onDragOver={handleDragOver} onDrop={handleDrop}>
        <form onSubmit={handleSubmit}>
          <label htmlFor="file-upload" className="custom-file-upload">
            <img src={postImage.myFile} alt="" />
          </label>

          <input
            type="file"
            lable="Image"
            name="myFile"
            id="file-upload"
            accept=".jpeg, .png, .jpg"
            onChange={(e) => handleFileUpload(e)}
          />
          <button type="submit" onClick={() => inputRef.current.click()}>Submit</button>
        </form>
      </div>
    </div>
  );
}

export default App;

function convertToBase64(file) {
  return new Promise((resolve, reject) => {
    const fileReader = new FileReader();
    fileReader.readAsDataURL(file);
    fileReader.onload = () => {
      resolve(fileReader.result);
    };
    fileReader.onerror = (error) => {
      reject(error);
    };
  });
}
